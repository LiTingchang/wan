package com.kuaikan.comic.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.kuaikan.comic.dao.bean.UserBean;
import com.kuaikan.comic.dao.bean.TopicBean;
import com.kuaikan.comic.dao.bean.ComicBriefBean;
import com.kuaikan.comic.dao.bean.ComicDetailBean;
import com.kuaikan.comic.dao.bean.SearchHistory;

import com.kuaikan.comic.dao.UserBeanDao;
import com.kuaikan.comic.dao.TopicBeanDao;
import com.kuaikan.comic.dao.ComicBriefBeanDao;
import com.kuaikan.comic.dao.ComicDetailBeanDao;
import com.kuaikan.comic.dao.SearchHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig topicBeanDaoConfig;
    private final DaoConfig comicBriefBeanDaoConfig;
    private final DaoConfig comicDetailBeanDaoConfig;
    private final DaoConfig searchHistoryDaoConfig;

    private final UserBeanDao userBeanDao;
    private final TopicBeanDao topicBeanDao;
    private final ComicBriefBeanDao comicBriefBeanDao;
    private final ComicDetailBeanDao comicDetailBeanDao;
    private final SearchHistoryDao searchHistoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        topicBeanDaoConfig = daoConfigMap.get(TopicBeanDao.class).clone();
        topicBeanDaoConfig.initIdentityScope(type);

        comicBriefBeanDaoConfig = daoConfigMap.get(ComicBriefBeanDao.class).clone();
        comicBriefBeanDaoConfig.initIdentityScope(type);

        comicDetailBeanDaoConfig = daoConfigMap.get(ComicDetailBeanDao.class).clone();
        comicDetailBeanDaoConfig.initIdentityScope(type);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        topicBeanDao = new TopicBeanDao(topicBeanDaoConfig, this);
        comicBriefBeanDao = new ComicBriefBeanDao(comicBriefBeanDaoConfig, this);
        comicDetailBeanDao = new ComicDetailBeanDao(comicDetailBeanDaoConfig, this);
        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);

        registerDao(UserBean.class, userBeanDao);
        registerDao(TopicBean.class, topicBeanDao);
        registerDao(ComicBriefBean.class, comicBriefBeanDao);
        registerDao(ComicDetailBean.class, comicDetailBeanDao);
        registerDao(SearchHistory.class, searchHistoryDao);
    }
    
    public void clear() {
        userBeanDaoConfig.getIdentityScope().clear();
        topicBeanDaoConfig.getIdentityScope().clear();
        comicBriefBeanDaoConfig.getIdentityScope().clear();
        comicDetailBeanDaoConfig.getIdentityScope().clear();
        searchHistoryDaoConfig.getIdentityScope().clear();
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public TopicBeanDao getTopicBeanDao() {
        return topicBeanDao;
    }

    public ComicBriefBeanDao getComicBriefBeanDao() {
        return comicBriefBeanDao;
    }

    public ComicDetailBeanDao getComicDetailBeanDao() {
        return comicDetailBeanDao;
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

}
